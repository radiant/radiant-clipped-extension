#!/usr/bin/env bash

# all 'test's before 'ue' or will exit when test fails

test "$WITH_RVM" || WITH_RVM="true"
test "$RADIANT_VERSION" || RADIANT_VERSION="master"
test "$DB" || DB="sqlite"
test -e ~/radiant && rm -rf ~/radiant


set -xue

start_path="$( pwd )"

cd ~
git clone git://github.com/radiant/radiant.git
cd ~/radiant

if [[ $RADIANT_VERSION != "master" ]]
then
  git checkout -b $RADIANT_VERSION $RADIANT_VERSION
fi

cp -r $start_path vendor/extensions/clipped
gem install bundler --no-ri --no-rdoc

echo 'gem "radiant-clipped-extension", :path => "vendor/extensions/clipped"' >> Gemfile
echo 'gemspec' >> Gemfile

# I really dislike using rvm gemset, but while testing this 
# script I got sick having to install the same gems over and
# over again.
if [[ $WITH_RVM == "true" ]]; then
        rvm gemset create radiant_development
        rvm gemset use radiant_development
        bundle install
else
        bundle install --path ./vendor/bundle
fi

case $DB in
  "mysql" )
    mysql -e 'create database radiant_test;'
    cp spec/ci/database.mysql.yml config/database.yml;;
  "postgres" )
    psql -c 'create database radiant_test;' -U postgres
    cp spec/ci/database.postgresql.yml config/database.yml;;
  "sqlite" )
    cp spec/ci/database.sqlite.yml config/database.yml;;
esac

RAILS_ENV=test bundle exec rake db:migrate --trace 
RAILS_ENV=test bundle exec rake db:migrate:extensions --trace
